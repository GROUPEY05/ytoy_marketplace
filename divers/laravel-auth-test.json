{
	"info": {
		"_postman_id": "8e21f4f9-5a3e-4f05-a932-12345678abcd",
		"name": "Laravel Marketplace Auth Tests",
		"description": "Tests pour l'authentification et la gestion des rôles",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Inscription",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Client Test\",\n    \"email\": \"client@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"phone\": \"+33612345678\",\n    \"role\": \"client\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"register"
					]
				},
				"description": "Création d'un compte client"
			},
			"response": []
		},
		{
			"name": "2. Inscription Vendeur",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Vendeur Test\",\n    \"email\": \"vendeur@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"phone\": \"+33687654321\",\n    \"role\": \"vendeur\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"register"
					]
				},
				"description": "Création d'un compte vendeur"
			},
			"response": []
		},
		{
			"name": "3. Tentative d'inscription avec email en double",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Client Duplicate\",\n    \"email\": \"client@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"phone\": \"+33612345600\",\n    \"role\": \"client\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"register"
					]
				},
				"description": "Test de validation - email en double"
			},
			"response": []
		},
		{
			"name": "4. Connexion Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"client_token\", jsonData.access_token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Token reçu\", function () {",
							"    pm.expect(jsonData.access_token).to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Redirection correcte\", function () {",
							"    pm.expect(jsonData.redirect_to).to.eql(\"/client/dashboard\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"client@example.com\",\n    \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "Connexion avec le compte client"
			},
			"response": []
		},
		{
			"name": "5. Connexion Vendeur",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"vendeur_token\", jsonData.access_token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Token reçu\", function () {",
							"    pm.expect(jsonData.access_token).to.not.be.empty;",
							"});",
							"",
							"pm.test(\"Redirection correcte\", function () {",
							"    pm.expect(jsonData.redirect_to).to.eql(\"/vendeur/dashboard\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"vendeur@example.com\",\n    \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "Connexion avec le compte vendeur"
			},
			"response": []
		},
		{
			"name": "6. Tentative de connexion avec identifiants invalides",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"client@example.com\",\n    \"password\": \"mauvaispassword\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"login"
					]
				},
				"description": "Test avec un mot de passe incorrect"
			},
			"response": []
		},
		{
			"name": "7. Accès Dashboard Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contenu du dashboard client\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.eql(\"Dashboard Client\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{client_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/client/dashboard",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"dashboard"
					]
				},
				"description": "Accès à l'espace client avec token client"
			},
			"response": []
		},
		{
			"name": "8. Accès Dashboard Vendeur",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contenu du dashboard vendeur\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.eql(\"Dashboard Vendeur\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{vendeur_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/vendeur/dashboard",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"vendeur",
						"dashboard"
					]
				},
				"description": "Accès à l'espace vendeur avec token vendeur"
			},
			"response": []
		},
		{
			"name": "9. Client essaie d'accéder au Dashboard Vendeur",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{client_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/vendeur/dashboard",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"vendeur",
						"dashboard"
					]
				},
				"description": "Test de sécurité - Client essaie d'accéder à l'espace vendeur"
			},
			"response": []
		},
		{
			"name": "10. Vendeur essaie d'accéder au Dashboard Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{vendeur_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/client/dashboard",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"dashboard"
					]
				},
				"description": "Test de sécurité - Vendeur essaie d'accéder à l'espace client"
			},
			"response": []
		},
		{
			"name": "11. Demande de vérification de téléphone",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{client_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/send-phone-verification",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"send-phone-verification"
					]
				},
				"description": "Demande l'envoi d'un code par SMS"
			},
			"response": []
		},
		{
			"name": "12. Valider la vérification de téléphone",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{client_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"123456\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/verify-phone",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"verify-phone"
					]
				},
				"description": "Vérifie le téléphone avec le code (simulé)"
			},
			"response": []
		},
		{
			"name": "13. Déconnexion Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{client_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/logout",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"logout"
					]
				},
				"description": "Déconnexion du compte client"
			},
			"response": []
		},
		{
			"name": "14. Tentative d'accès après déconnexion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{client_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/client/dashboard",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"client",
						"dashboard"
					]
				},
				"description": "Tentative d'accès avec un token révoqué"
			},
			"response": []
		},
		{
			"name": "15. Création manuelle d'un Admin (via DB)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/admin/dashboard",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"admin",
						"dashboard"
					]
				},
				"description": "Cette requête échouera sans un token admin. Vous devrez créer un utilisateur admin directement dans la base de données ou via un seeder.\n\nExemple de seeder:\n```php\nDB::table('users')->insert([\n    'name' => 'Admin',\n    'email' => 'admin@example.com',\n    'password' => Hash::make('admin_password'),\n    'role' => 'admin',\n    'email_verified' => true,\n    'created_at' => now(),\n    'updated_at' => now(),\n]);\n```"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}